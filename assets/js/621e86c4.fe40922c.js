"use strict";(self.webpackChunkroblox_ts=self.webpackChunkroblox_ts||[]).push([[848],{3136:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});var o=n(7624),l=n(2172);const c={title:"Callbacks vs Methods"},i=void 0,t={id:"guides/callbacks-vs-methods",title:"Callbacks vs Methods",description:"To begin, let's quickly define two Luau terms:",source:"@site/docs/guides/callbacks-vs-methods.mdx",sourceDirName:"guides",slug:"/guides/callbacks-vs-methods",permalink:"/docs/guides/callbacks-vs-methods",draft:!1,unlisted:!1,editUrl:"https://github.com/roblox-ts/roblox-ts.com/blob/master/docs/guides/callbacks-vs-methods.mdx",tags:[],version:"current",frontMatter:{title:"Callbacks vs Methods"},sidebar:"docs",previous:{title:"Syncing with Rojo",permalink:"/docs/guides/syncing-with-rojo"},next:{title:"DataType Math",permalink:"/docs/guides/datatype-math"}},r={},d=[{value:"Callbacks",id:"callbacks",level:2},{value:"Methods",id:"methods",level:2},{value:"Overrides",id:"overrides",level:2}];function a(e){const s={code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.p,{children:"To begin, let's quickly define two Luau terms:"}),"\n",(0,o.jsxs)(s.ol,{children:["\n",(0,o.jsxs)(s.li,{children:['A "callback" is a function that is called in the form of ',(0,o.jsx)(s.code,{children:"foo.bar()"}),"."]}),"\n",(0,o.jsxs)(s.li,{children:['A "method" is a function that is called in the form of ',(0,o.jsx)(s.code,{children:"foo:bar()"}),".","\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["The parameter ",(0,o.jsx)(s.code,{children:"self"})," is implicitly passed as the value of ",(0,o.jsx)(s.code,{children:"foo"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["However, in TypeScript, all functions inside of objects are called as simply ",(0,o.jsx)(s.code,{children:"foo.bar()"}),". To decide whether or not a function call should compile using ",(0,o.jsx)(s.code,{children:"."})," or ",(0,o.jsx)(s.code,{children:":"}),", roblox-ts follows a simple set of rules:"]}),"\n",(0,o.jsx)(s.h2,{id:"callbacks",children:"Callbacks"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Function declarations are considered ",(0,o.jsx)(s.strong,{children:"callbacks"}),"."]}),"\n"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"function foo(bar: number) {}\nconst obj = { foo: foo };\nobj.foo(123); // obj.foo(123)\n"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Arrow function expressions are considered ",(0,o.jsx)(s.strong,{children:"callbacks"}),"."]}),"\n"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"const obj = {\n\tfoo: (bar: number) => {}\n}\nobj.foo(123); // obj.foo(123)\n"})}),"\n",(0,o.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Method declarations are considered ",(0,o.jsx)(s.strong,{children:"methods"}),"."]}),"\n"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"const obj = {\n\tfoo(bar: number) {}\n}\nobj.foo(123); // obj:foo(123)\n"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Function expressions inside of object literals are considered ",(0,o.jsx)(s.strong,{children:"methods"}),"."]}),"\n"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"const obj = {\n\tfoo: function (bar: number) {}\n}\nobj.foo(123); // obj:foo(123)\n"})}),"\n",(0,o.jsx)(s.h2,{id:"overrides",children:"Overrides"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["If a function has a parameter ",(0,o.jsx)(s.code,{children:"this: void"}),", it is ",(0,o.jsx)(s.em,{children:"always"})," considered to be a ",(0,o.jsx)(s.strong,{children:"callback"}),"."]}),"\n"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"const obj = {\n\tfoo(this: void, bar: number) {}\n}\nobj.foo(123); // obj.foo(123)\n"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["If a function has a parameter ",(0,o.jsx)(s.code,{children:"this"})," which is typed as anything except ",(0,o.jsx)(s.code,{children:"void"}),", it is ",(0,o.jsx)(s.em,{children:"always"})," considered to be a ",(0,o.jsx)(s.strong,{children:"method"}),"."]}),"\n"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"declare const obj: {\n    foo: (this: typeof obj, bar: number) => void;\n}\nobj.foo(123); // obj:foo(123)\n"})})]})}function h(e={}){const{wrapper:s}={...(0,l.M)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},2172:(e,s,n)=>{n.d(s,{I:()=>t,M:()=>i});var o=n(1504);const l={},c=o.createContext(l);function i(e){const s=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),o.createElement(c.Provider,{value:s},e.children)}}}]);