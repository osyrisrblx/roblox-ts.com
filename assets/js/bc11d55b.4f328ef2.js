"use strict";(self.webpackChunkroblox_ts_com=self.webpackChunkroblox_ts_com||[]).push([[63],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5589:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={title:"Utility Types"},s=void 0,c={unversionedId:"api/utility-types",id:"api/utility-types",title:"Utility Types",description:"_",source:"@site/docs/api/utility-types.mdx",sourceDirName:"api",slug:"/api/utility-types",permalink:"/roblox-ts.com/docs/api/utility-types",editUrl:"https://github.com/roblox-ts/roblox-ts.com/blob/master/docs/api/utility-types.mdx",tags:[],version:"current",frontMatter:{title:"Utility Types"},sidebar:"docs",previous:{title:"Functions",permalink:"/roblox-ts.com/docs/api/functions"},next:{title:"Syncing with Rojo",permalink:"/roblox-ts.com/docs/guides/syncing-with-rojo"}},p=[{value:"<code>_&lt;T&gt;</code>",id:"_t",children:[],level:3},{value:"<code>Partial&lt;T&gt;</code>",id:"partialt",children:[],level:3},{value:"<code>Required&lt;T&gt;</code>",id:"requiredt",children:[],level:3},{value:"<code>Readonly&lt;T&gt;</code>",id:"readonlyt",children:[],level:3},{value:"<code>Writable&lt;T&gt;</code>",id:"writablet",children:[],level:3},{value:"<code>Pick&lt;T, K&gt;</code>",id:"pickt-k",children:[],level:3},{value:"<code>Omit&lt;T, K&gt;</code>",id:"omitt-k",children:[],level:3},{value:"<code>Record&lt;K, T&gt;</code>",id:"recordk-t",children:[],level:3},{value:"<code>Exclude&lt;T, U&gt;</code>",id:"excludet-u",children:[],level:3},{value:"<code>Extract&lt;T, U&gt;</code>",id:"extractt-u",children:[],level:3},{value:"<code>ExtractKeys&lt;T, U&gt;</code>",id:"extractkeyst-u",children:[],level:3},{value:"<code>ExtractMembers&lt;T, U&gt;</code>",id:"extractmemberst-u",children:[],level:3},{value:"<code>ExcludeKeys&lt;T, U&gt;</code>",id:"excludekeyst-u",children:[],level:3},{value:"<code>ExcludeMembers&lt;T, U&gt;</code>",id:"excludememberst-u",children:[],level:3},{value:"<code>NonNullable&lt;T&gt;</code>",id:"nonnullablet",children:[],level:3},{value:"<code>Parameters&lt;T&gt;</code>",id:"parameterst",children:[],level:3},{value:"<code>ConstructorParameters&lt;T&gt;</code>",id:"constructorparameterst",children:[],level:3},{value:"<code>ReturnType&lt;T&gt;</code>",id:"returntypet",children:[],level:3},{value:"<code>InstanceType&lt;T&gt;</code>",id:"instancetypet",children:[],level:3},{value:"<code>Reconstruct&lt;T&gt;</code>",id:"reconstructt",children:[],level:3},{value:"<code>UnionToIntersection&lt;T&gt;</code>",id:"uniontointersectiont",children:[],level:3},{value:"<code>ThisParameterType&lt;T&gt;</code>",id:"thisparametertypet",children:[],level:3},{value:"<code>OmitThisParameter&lt;T&gt;</code>",id:"omitthisparametert",children:[],level:3},{value:"<code>WritablePropertyNames&lt;T&gt;</code>",id:"writablepropertynamest",children:[],level:3},{value:"<code>WritableProperties&lt;T&gt;</code>",id:"writablepropertiest",children:[],level:3},{value:"<code>InstancePropertyNames&lt;T&gt;</code>",id:"instancepropertynamest",children:[],level:3},{value:"<code>InstanceMethodNames&lt;T&gt;</code>",id:"instancemethodnamest",children:[],level:3},{value:"<code>InstanceEventNames&lt;T&gt;</code>",id:"instanceeventnamest",children:[],level:3},{value:"<code>InstanceProperties&lt;T&gt;</code>",id:"instancepropertiest",children:[],level:3},{value:"<code>InstanceMethods&lt;T&gt;</code>",id:"instancemethodst",children:[],level:3},{value:"<code>InstanceEvents&lt;T&gt;</code>",id:"instanceeventst",children:[],level:3},{value:"<code>WritableInstanceProperties&lt;T&gt;</code>",id:"writableinstancepropertiest",children:[],level:3},{value:"<code>ExcludeNominalMembers&lt;T&gt;</code>",id:"excludenominalmemberst",children:[],level:3}],d={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"_t"},(0,l.kt)("inlineCode",{parentName:"h3"},"_<T>")),(0,l.kt)("p",null,"Placeholder that sometimes helps force TS to display what you want it to."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type _<T> = T;\n")),(0,l.kt)("h3",{id:"partialt"},(0,l.kt)("inlineCode",{parentName:"h3"},"Partial<T>")),(0,l.kt)("p",null,"Make all properties in T optional"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Partial<T> = { [P in keyof T]?: T[P] };\n")),(0,l.kt)("h3",{id:"requiredt"},(0,l.kt)("inlineCode",{parentName:"h3"},"Required<T>")),(0,l.kt)("p",null,"Make all properties in T required"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Required<T> = { [P in keyof T]-?: T[P] };\n")),(0,l.kt)("h3",{id:"readonlyt"},(0,l.kt)("inlineCode",{parentName:"h3"},"Readonly<T>")),(0,l.kt)("p",null,"Make all properties in T readonly"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Readonly<T> = { readonly [P in keyof T]: T[P] };\n")),(0,l.kt)("h3",{id:"writablet"},(0,l.kt)("inlineCode",{parentName:"h3"},"Writable<T>")),(0,l.kt)("p",null,"Make all properties in T non-readonly."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Writable<T> = { -readonly [P in keyof T]: T[P] };\n")),(0,l.kt)("h3",{id:"pickt-k"},(0,l.kt)("inlineCode",{parentName:"h3"},"Pick<T, K>")),(0,l.kt)("p",null,"From T pick a set of properties K"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Pick<T, K extends keyof T> = { [P in K]: T[P] };\n")),(0,l.kt)("h3",{id:"omitt-k"},(0,l.kt)("inlineCode",{parentName:"h3"},"Omit<T, K>")),(0,l.kt)("p",null,"Returns a subset of type T which excludes properties K"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n")),(0,l.kt)("h3",{id:"recordk-t"},(0,l.kt)("inlineCode",{parentName:"h3"},"Record<K, T>")),(0,l.kt)("p",null,"Construct a type with a set of properties K of type T"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Record<K extends keyof any, T> = { [P in K]: T };\n")),(0,l.kt)("h3",{id:"excludet-u"},(0,l.kt)("inlineCode",{parentName:"h3"},"Exclude<T, U>")),(0,l.kt)("p",null,"Exclude from T those types that are assignable to U"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Exclude<T, U> = T extends U ? never : T;\n")),(0,l.kt)("h3",{id:"extractt-u"},(0,l.kt)("inlineCode",{parentName:"h3"},"Extract<T, U>")),(0,l.kt)("p",null,"Extract from T those types that are assignable to U"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Extract<T, U> = T extends U ? T : never;\n")),(0,l.kt)("h3",{id:"extractkeyst-u"},(0,l.kt)("inlineCode",{parentName:"h3"},"ExtractKeys<T, U>")),(0,l.kt)("p",null,"Returns a union of all the keys of T whose values extend from U"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ExtractKeys<T, U> = { [K in keyof T]: T[K] extends U ? K : never }[keyof T];\n")),(0,l.kt)("h3",{id:"extractmemberst-u"},(0,l.kt)("inlineCode",{parentName:"h3"},"ExtractMembers<T, U>")),(0,l.kt)("p",null,"Returns a new object type of all the keys of T whose values extend from U"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ExtractMembers<T, U> = Pick<T, ExtractKeys<T, U>>;\n")),(0,l.kt)("h3",{id:"excludekeyst-u"},(0,l.kt)("inlineCode",{parentName:"h3"},"ExcludeKeys<T, U>")),(0,l.kt)("p",null,"Returns a union of all the keys of T whose values do not extend from U"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ExcludeKeys<T, U> = { [K in keyof T]: T[K] extends U ? never : K }[keyof T];\n")),(0,l.kt)("h3",{id:"excludememberst-u"},(0,l.kt)("inlineCode",{parentName:"h3"},"ExcludeMembers<T, U>")),(0,l.kt)("p",null,"Returns a new object type of all the keys of T whose values do not extend from U"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ExcludeMembers<T, U> = Pick<T, ExcludeKeys<T, U>>;\n")),(0,l.kt)("h3",{id:"nonnullablet"},(0,l.kt)("inlineCode",{parentName:"h3"},"NonNullable<T>")),(0,l.kt)("p",null,"Exclude null and undefined from T"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type NonNullable<T> = unknown extends T ? defined : T extends null | undefined ? never : T;\n")),(0,l.kt)("h3",{id:"parameterst"},(0,l.kt)("inlineCode",{parentName:"h3"},"Parameters<T>")),(0,l.kt)("p",null,"Obtain the parameters of a function type in a ",(0,l.kt)("inlineCode",{parentName:"p"},"tuple | never"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\n")),(0,l.kt)("h3",{id:"constructorparameterst"},(0,l.kt)("inlineCode",{parentName:"h3"},"ConstructorParameters<T>")),(0,l.kt)("p",null,"Obtain the parameters of a constructor function type in a ",(0,l.kt)("inlineCode",{parentName:"p"},"tuple | never")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ConstructorParameters<T extends new (...args: any) => any> = T extends new (...args: infer P) => any ? P : never;\n")),(0,l.kt)("h3",{id:"returntypet"},(0,l.kt)("inlineCode",{parentName:"h3"},"ReturnType<T>")),(0,l.kt)("p",null,"Obtain the return type of a function type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ReturnType<T extends (...args: Array<any>) => any> = T extends (...args: Array<any>) => infer R ? R : any;\n")),(0,l.kt)("h3",{id:"instancetypet"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstanceType<T>")),(0,l.kt)("p",null,"Obtain the return type of a constructor function type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceType<T extends new (...args: Array<any>) => any> = T extends new (...args: Array<any>) => infer R\n    ? R\n    : any;\n")),(0,l.kt)("h3",{id:"reconstructt"},(0,l.kt)("inlineCode",{parentName:"h3"},"Reconstruct<T>")),(0,l.kt)("p",null,"Combines a series of intersections into one object, e.g. { x: number } & { y: number } becomes { x: number, y: number }"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Reconstruct<T> = _<{ [K in keyof T]: T[K] }>;\n")),(0,l.kt)("h3",{id:"uniontointersectiont"},(0,l.kt)("inlineCode",{parentName:"h3"},"UnionToIntersection<T>")),(0,l.kt)("p",null,"Converts a series of object unions to a series of intersections, e.g. A | B becomes A & B"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type UnionToIntersection<T> = (T extends object ? (k: T) => void : never) extends (k: infer U) => void ? U : never;\n")),(0,l.kt)("h3",{id:"thisparametertypet"},(0,l.kt)("inlineCode",{parentName:"h3"},"ThisParameterType<T>")),(0,l.kt)("p",null,"Extracts the type of the 'this' parameter of a function type, or 'unknown' if the function type has no 'this' parameter."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ThisParameterType<T> = T extends (this: infer U, ...args: Array<any>) => any ? U : unknown;\n")),(0,l.kt)("h3",{id:"omitthisparametert"},(0,l.kt)("inlineCode",{parentName:"h3"},"OmitThisParameter<T>")),(0,l.kt)("p",null,"Removes the 'this' parameter from a function type."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type OmitThisParameter<T> = unknown extends ThisParameterType<T>\n    ? T\n    : T extends (...args: infer A) => infer R\n    ? (...args: A) => R\n    : T;\n")),(0,l.kt)("h3",{id:"writablepropertynamest"},(0,l.kt)("inlineCode",{parentName:"h3"},"WritablePropertyNames<T>")),(0,l.kt)("p",null,"Given an object ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns a unioned type of all non-readonly property names."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type WritablePropertyNames<T> = {\n    [K in keyof T]-?: T[K] extends Callback\n        ? never\n        : (<F>() => F extends { [Q in K]: T[K] } ? 1 : 2) extends <F>() => F extends {\n                -readonly [Q in K]: T[K];\n          }\n                ? 1\n                : 2\n        ? K\n        : never;\n}[keyof T];\n")),(0,l.kt)("h3",{id:"writablepropertiest"},(0,l.kt)("inlineCode",{parentName:"h3"},"WritableProperties<T>")),(0,l.kt)("p",null,"Given an object ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns an object with readonly fields filtered out."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type WritableProperties<T> = Pick<T, WritablePropertyNames<T>>;\n")),(0,l.kt)("h3",{id:"instancepropertynamest"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstancePropertyNames<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns a unioned type of all property names."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstancePropertyNames<T extends Instance> = ExcludeKeys<T, RBXScriptSignal | Callback | symbol>;\n")),(0,l.kt)("h3",{id:"instancemethodnamest"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstanceMethodNames<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns a unioned type of all method names."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceMethodNames<T extends Instance> = ExtractKeys<T, Callback>;\n")),(0,l.kt)("h3",{id:"instanceeventnamest"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstanceEventNames<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns a unioned type of all event names."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceEventNames<T extends Instance> = ExtractKeys<T, RBXScriptSignal>;\n")),(0,l.kt)("h3",{id:"instancepropertiest"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstanceProperties<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns an object with only properties."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceProperties<T extends Instance> = Pick<T, InstancePropertyNames<T>>;\n")),(0,l.kt)("h3",{id:"instancemethodst"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstanceMethods<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns an object with only methods."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceMethods<T extends Instance> = Pick<T, InstanceMethodNames<T>>;\n")),(0,l.kt)("h3",{id:"instanceeventst"},(0,l.kt)("inlineCode",{parentName:"h3"},"InstanceEvents<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns an object with only events."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceEvents<T extends Instance> = Pick<T, InstanceEventNames<T>>;\n")),(0,l.kt)("h3",{id:"writableinstancepropertiest"},(0,l.kt)("inlineCode",{parentName:"h3"},"WritableInstanceProperties<T>")),(0,l.kt)("p",null,"Given an Instance ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", returns an object with readonly fields, methods, and events filtered out."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type WritableInstanceProperties<T extends Instance> = WritableProperties<InstanceProperties<T>>;\n")),(0,l.kt)("h3",{id:"excludenominalmemberst"},(0,l.kt)("inlineCode",{parentName:"h3"},"ExcludeNominalMembers<T>")),(0,l.kt)("p",null,"Returns a new object type of all the keys of T which do not start with ",(0,l.kt)("inlineCode",{parentName:"p"},"_nominal_")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ExcludeNominalMembers<T> = Pick<T, ExcludeNominalKeys<T>>;\n")))}u.isMDXComponent=!0}}]);