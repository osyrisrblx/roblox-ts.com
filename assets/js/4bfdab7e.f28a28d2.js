"use strict";(self.webpackChunkroblox_ts_com=self.webpackChunkroblox_ts_com||[]).push([[272],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=s(n),m=o,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||a;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3066:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={title:"Usage"},c=void 0,s={unversionedId:"usage",id:"usage",title:"Usage",description:"The following is a reference for how to use the roblox-ts command line interface.",source:"@site/docs/usage.mdx",sourceDirName:".",slug:"/usage",permalink:"/roblox-ts.com/docs/usage",editUrl:"https://github.com/roblox-ts/roblox-ts.com/blob/master/docs/usage.mdx",tags:[],version:"current",frontMatter:{title:"Usage"},sidebar:"docs",previous:{title:"Quick Start",permalink:"/roblox-ts.com/docs/quick-start"},next:{title:"Setup Guide",permalink:"/roblox-ts.com/docs/setup-guide"}},u=[],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following is a reference for how to use the roblox-ts command line interface."),(0,a.kt)("p",null,"This can be displayed with ",(0,a.kt)("inlineCode",{parentName:"p"},"rbxtsc --help"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'roblox-ts - A TypeScript-to-Luau Compiler for Roblox\n\nCommands:\n  rbxtsc build  Build a project  [default]\n  rbxtsc init   Create a project from a template\n\nOptions:\n  -p, --project           project path  [string] [default: "."]\n  -w, --watch             enable watch mode  [boolean] [default: false]\n      --usePolling        use polling for watch mode  [boolean] [default: false]\n      --verbose           enable verbose logs  [boolean] [default: false]\n      --noInclude         do not copy include files  [boolean] [default: false]\n      --logStringChanges  logs changes to legacy string argument offsets  [boolean] [default: false]\n      --logTruthyChanges  logs changes to truthiness evaluation from Lua truthiness rules  [boolean] [default: false]\n      --writeOnlyChanged  [boolean] [default: false]\n      --type              override project type  [choices: "game", "model", "package"]\n  -i, --includePath       folder to copy runtime files to  [string]\n      --rojo              manually select Rojo project file  [string]\n  -h, --help              show help information  [boolean]\n  -v, --version           show version information  [boolean]\n')))}f.isMDXComponent=!0}}]);